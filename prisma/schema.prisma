// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TranslationCategory {
  id          String     @id @default(cuid())
  locale      String
  title       String
  description String
  category    Categories @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
}

model TranslationSubCategory {
  id            String        @id @default(cuid())
  locale        String
  title         String
  description   String
  subCategory   SubCategories @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  subCategoryId String
}

model TranslationArticle {
  id          String  @id @default(cuid())
  locale      String
  title       String
  description String
  article     Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId   String
}

model Categories {
  id                      String                  @id @default(cuid())
  translations            TranslationCategory[]
  subCategories           SubCategories[]         @relation("CategoryToSubCategory")
  categoryOnSubCategories CategoryOnSubCategory[]
}

model SubCategories {
  id                      String                   @id @default(cuid())
  translations            TranslationSubCategory[]
  article                 Article[]
  categories              Categories[]             @relation("CategoryToSubCategory")
  categoryOnSubCategories CategoryOnSubCategory[]
}

model CategoryOnSubCategory {
  categoryId    String
  subCategoryId String

  category    Categories    @relation(fields: [categoryId], references: [id])
  subCategory SubCategories @relation(fields: [subCategoryId], references: [id])

  @@id([categoryId, subCategoryId])
}

model Article {
  id            String               @id @default(cuid())
  subCategoryId String
  category      SubCategories        @relation(fields: [subCategoryId], references: [id])
  translations  TranslationArticle[]
  articleImages ArticleImages[]
}

model ArticleImages {
  id         String   @id @default(cuid())
  articleId  String
  article    Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  url        String
  uploadedAt DateTime @default(now())
}
